# This is a basic workflow to help you get started with Actions

name: Deploy to Production (Beta)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build" - つまり好きな名前をつけてよい
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2 # npm コンパイル時に node.js が必要
        with:
          node-version: '16'
          check-latest: true
      - uses: aws-actions/configure-aws-credentials@v1 # s3 へのコミットに awscli が必要
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}
      
      - name: Copy .env for production as .env
        shell: bash
        run: |
          cp .env.production.sample .env.production
        working-directory: app

      - name: Generate static-files by npm command
        run: |
          npm install
          npm run build
        working-directory: app
          
      - name: Deploy dist to s3 (Production)
        run: |
          aws s3 sync ./dist/ s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete
        working-directory: app
        
      # - name: Remove Cloudfront cache
      #   uses: chetan/invalidate-cloudfront-action@master
      #   env:
      #     DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
      #     PATHS: '/*'
      #     AWS_REGION: 'us-east-1'
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
